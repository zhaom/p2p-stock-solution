<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.solution.p2p.core.dao.MemberAccountFlowMapper" >
  <resultMap id="BaseResultMap" type="com.solution.p2p.core.common.entity.MemberAccountFlow" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="member_account_id" property="memberAccountId" jdbcType="BIGINT" />
    <result column="m_id" property="mId" jdbcType="BIGINT" />
    <result column="member_account_item_id" property="memberAccountItemId" jdbcType="BIGINT" />
    <result column="mat_id" property="matId" jdbcType="BIGINT" />
    <result column="mat_date" property="matDate" jdbcType="DATE" />
    <result column="mat_service_code" property="matServiceCode" jdbcType="INTEGER" />
    <result column="finance_op_type" property="financeOpType" jdbcType="INTEGER" />
    <result column="amount" property="amount" jdbcType="BIGINT" />
    <result column="thawed_amount" property="thawedAmount" jdbcType="BIGINT" />
    <result column="unit" property="unit" jdbcType="INTEGER" />
    <result column="mat_summary" property="matSummary" jdbcType="VARCHAR" />
    <result column="trade_type" property="tradeType" jdbcType="INTEGER" />
    <result column="trade_seq_no" property="tradeSeqNo" jdbcType="BIGINT" />
    <result column="pay_seq_no" property="paySeqNo" jdbcType="BIGINT" />
    <result column="thru_frozen_amount" property="thruFrozenAmount" jdbcType="BIGINT" />
    <result column="thru_amount" property="thruAmount" jdbcType="BIGINT" />
    <result column="biz_member_id" property="bizMemberId" jdbcType="VARCHAR" />
    <result column="biz_app_date" property="bizAppDate" jdbcType="VARCHAR" />
    <result column="biz_order_no" property="bizOrderNo" jdbcType="VARCHAR" />
    <result column="pay_method" property="payMethod" jdbcType="INTEGER" />
    <result column="bank_code" property="bankCode" jdbcType="VARCHAR" />
    <result column="bank_biz_code" property="bankBizCode" jdbcType="VARCHAR" />
    <result column="bank_accept_date" property="bankAcceptDate" jdbcType="VARCHAR" />
    <result column="bank_accept_seq_no" property="bankAcceptSeqNo" jdbcType="VARCHAR" />
    <result column="bank_rep_seq_no" property="bankRepSeqNo" jdbcType="VARCHAR" />
    <result column="balance_type" property="balanceType" jdbcType="INTEGER" />
    <result column="up_balance_flag" property="upBalanceFlag" jdbcType="INTEGER" />
    <result column="down_balance_flag" property="downBalanceFlag" jdbcType="INTEGER" />
    <result column="member_account_flow_ext" property="memberAccountFlowExt" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, member_account_id, m_id, member_account_item_id, mat_id, mat_date, mat_service_code, 
    finance_op_type, amount, thawed_amount, unit, mat_summary, trade_type, trade_seq_no, 
    pay_seq_no, thru_frozen_amount, thru_amount, biz_member_id, biz_app_date, biz_order_no, 
    pay_method, bank_code, bank_biz_code, bank_accept_date, bank_accept_seq_no, bank_rep_seq_no, 
    balance_type, up_balance_flag, down_balance_flag, member_account_flow_ext, remark, 
    create_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.solution.p2p.core.common.entity.MemberAccountFlowExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from member_account_flow
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from member_account_flow
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from member_account_flow
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.solution.p2p.core.common.entity.MemberAccountFlowExample" >
    delete from member_account_flow
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.solution.p2p.core.common.entity.MemberAccountFlow" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into member_account_flow (member_account_id, m_id, member_account_item_id, 
      mat_id, mat_date, mat_service_code, 
      finance_op_type, amount, thawed_amount, 
      unit, mat_summary, trade_type, 
      trade_seq_no, pay_seq_no, thru_frozen_amount, 
      thru_amount, biz_member_id, biz_app_date, 
      biz_order_no, pay_method, bank_code, 
      bank_biz_code, bank_accept_date, bank_accept_seq_no, 
      bank_rep_seq_no, balance_type, up_balance_flag, 
      down_balance_flag, member_account_flow_ext, 
      remark, create_time, update_time
      )
    values (#{memberAccountId,jdbcType=BIGINT}, #{mId,jdbcType=BIGINT}, #{memberAccountItemId,jdbcType=BIGINT}, 
      #{matId,jdbcType=BIGINT}, #{matDate,jdbcType=DATE}, #{matServiceCode,jdbcType=INTEGER}, 
      #{financeOpType,jdbcType=INTEGER}, #{amount,jdbcType=BIGINT}, #{thawedAmount,jdbcType=BIGINT}, 
      #{unit,jdbcType=INTEGER}, #{matSummary,jdbcType=VARCHAR}, #{tradeType,jdbcType=INTEGER}, 
      #{tradeSeqNo,jdbcType=BIGINT}, #{paySeqNo,jdbcType=BIGINT}, #{thruFrozenAmount,jdbcType=BIGINT}, 
      #{thruAmount,jdbcType=BIGINT}, #{bizMemberId,jdbcType=VARCHAR}, #{bizAppDate,jdbcType=VARCHAR}, 
      #{bizOrderNo,jdbcType=VARCHAR}, #{payMethod,jdbcType=INTEGER}, #{bankCode,jdbcType=VARCHAR}, 
      #{bankBizCode,jdbcType=VARCHAR}, #{bankAcceptDate,jdbcType=VARCHAR}, #{bankAcceptSeqNo,jdbcType=VARCHAR}, 
      #{bankRepSeqNo,jdbcType=VARCHAR}, #{balanceType,jdbcType=INTEGER}, #{upBalanceFlag,jdbcType=INTEGER}, 
      #{downBalanceFlag,jdbcType=INTEGER}, #{memberAccountFlowExt,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.solution.p2p.core.common.entity.MemberAccountFlow" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into member_account_flow
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="memberAccountId != null" >
        member_account_id,
      </if>
      <if test="mId != null" >
        m_id,
      </if>
      <if test="memberAccountItemId != null" >
        member_account_item_id,
      </if>
      <if test="matId != null" >
        mat_id,
      </if>
      <if test="matDate != null" >
        mat_date,
      </if>
      <if test="matServiceCode != null" >
        mat_service_code,
      </if>
      <if test="financeOpType != null" >
        finance_op_type,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="thawedAmount != null" >
        thawed_amount,
      </if>
      <if test="unit != null" >
        unit,
      </if>
      <if test="matSummary != null" >
        mat_summary,
      </if>
      <if test="tradeType != null" >
        trade_type,
      </if>
      <if test="tradeSeqNo != null" >
        trade_seq_no,
      </if>
      <if test="paySeqNo != null" >
        pay_seq_no,
      </if>
      <if test="thruFrozenAmount != null" >
        thru_frozen_amount,
      </if>
      <if test="thruAmount != null" >
        thru_amount,
      </if>
      <if test="bizMemberId != null" >
        biz_member_id,
      </if>
      <if test="bizAppDate != null" >
        biz_app_date,
      </if>
      <if test="bizOrderNo != null" >
        biz_order_no,
      </if>
      <if test="payMethod != null" >
        pay_method,
      </if>
      <if test="bankCode != null" >
        bank_code,
      </if>
      <if test="bankBizCode != null" >
        bank_biz_code,
      </if>
      <if test="bankAcceptDate != null" >
        bank_accept_date,
      </if>
      <if test="bankAcceptSeqNo != null" >
        bank_accept_seq_no,
      </if>
      <if test="bankRepSeqNo != null" >
        bank_rep_seq_no,
      </if>
      <if test="balanceType != null" >
        balance_type,
      </if>
      <if test="upBalanceFlag != null" >
        up_balance_flag,
      </if>
      <if test="downBalanceFlag != null" >
        down_balance_flag,
      </if>
      <if test="memberAccountFlowExt != null" >
        member_account_flow_ext,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="memberAccountId != null" >
        #{memberAccountId,jdbcType=BIGINT},
      </if>
      <if test="mId != null" >
        #{mId,jdbcType=BIGINT},
      </if>
      <if test="memberAccountItemId != null" >
        #{memberAccountItemId,jdbcType=BIGINT},
      </if>
      <if test="matId != null" >
        #{matId,jdbcType=BIGINT},
      </if>
      <if test="matDate != null" >
        #{matDate,jdbcType=DATE},
      </if>
      <if test="matServiceCode != null" >
        #{matServiceCode,jdbcType=INTEGER},
      </if>
      <if test="financeOpType != null" >
        #{financeOpType,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=BIGINT},
      </if>
      <if test="thawedAmount != null" >
        #{thawedAmount,jdbcType=BIGINT},
      </if>
      <if test="unit != null" >
        #{unit,jdbcType=INTEGER},
      </if>
      <if test="matSummary != null" >
        #{matSummary,jdbcType=VARCHAR},
      </if>
      <if test="tradeType != null" >
        #{tradeType,jdbcType=INTEGER},
      </if>
      <if test="tradeSeqNo != null" >
        #{tradeSeqNo,jdbcType=BIGINT},
      </if>
      <if test="paySeqNo != null" >
        #{paySeqNo,jdbcType=BIGINT},
      </if>
      <if test="thruFrozenAmount != null" >
        #{thruFrozenAmount,jdbcType=BIGINT},
      </if>
      <if test="thruAmount != null" >
        #{thruAmount,jdbcType=BIGINT},
      </if>
      <if test="bizMemberId != null" >
        #{bizMemberId,jdbcType=VARCHAR},
      </if>
      <if test="bizAppDate != null" >
        #{bizAppDate,jdbcType=VARCHAR},
      </if>
      <if test="bizOrderNo != null" >
        #{bizOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="payMethod != null" >
        #{payMethod,jdbcType=INTEGER},
      </if>
      <if test="bankCode != null" >
        #{bankCode,jdbcType=VARCHAR},
      </if>
      <if test="bankBizCode != null" >
        #{bankBizCode,jdbcType=VARCHAR},
      </if>
      <if test="bankAcceptDate != null" >
        #{bankAcceptDate,jdbcType=VARCHAR},
      </if>
      <if test="bankAcceptSeqNo != null" >
        #{bankAcceptSeqNo,jdbcType=VARCHAR},
      </if>
      <if test="bankRepSeqNo != null" >
        #{bankRepSeqNo,jdbcType=VARCHAR},
      </if>
      <if test="balanceType != null" >
        #{balanceType,jdbcType=INTEGER},
      </if>
      <if test="upBalanceFlag != null" >
        #{upBalanceFlag,jdbcType=INTEGER},
      </if>
      <if test="downBalanceFlag != null" >
        #{downBalanceFlag,jdbcType=INTEGER},
      </if>
      <if test="memberAccountFlowExt != null" >
        #{memberAccountFlowExt,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.solution.p2p.core.common.entity.MemberAccountFlowExample" resultType="java.lang.Integer" >
    select count(*) from member_account_flow
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update member_account_flow
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.memberAccountId != null" >
        member_account_id = #{record.memberAccountId,jdbcType=BIGINT},
      </if>
      <if test="record.mId != null" >
        m_id = #{record.mId,jdbcType=BIGINT},
      </if>
      <if test="record.memberAccountItemId != null" >
        member_account_item_id = #{record.memberAccountItemId,jdbcType=BIGINT},
      </if>
      <if test="record.matId != null" >
        mat_id = #{record.matId,jdbcType=BIGINT},
      </if>
      <if test="record.matDate != null" >
        mat_date = #{record.matDate,jdbcType=DATE},
      </if>
      <if test="record.matServiceCode != null" >
        mat_service_code = #{record.matServiceCode,jdbcType=INTEGER},
      </if>
      <if test="record.financeOpType != null" >
        finance_op_type = #{record.financeOpType,jdbcType=INTEGER},
      </if>
      <if test="record.amount != null" >
        amount = #{record.amount,jdbcType=BIGINT},
      </if>
      <if test="record.thawedAmount != null" >
        thawed_amount = #{record.thawedAmount,jdbcType=BIGINT},
      </if>
      <if test="record.unit != null" >
        unit = #{record.unit,jdbcType=INTEGER},
      </if>
      <if test="record.matSummary != null" >
        mat_summary = #{record.matSummary,jdbcType=VARCHAR},
      </if>
      <if test="record.tradeType != null" >
        trade_type = #{record.tradeType,jdbcType=INTEGER},
      </if>
      <if test="record.tradeSeqNo != null" >
        trade_seq_no = #{record.tradeSeqNo,jdbcType=BIGINT},
      </if>
      <if test="record.paySeqNo != null" >
        pay_seq_no = #{record.paySeqNo,jdbcType=BIGINT},
      </if>
      <if test="record.thruFrozenAmount != null" >
        thru_frozen_amount = #{record.thruFrozenAmount,jdbcType=BIGINT},
      </if>
      <if test="record.thruAmount != null" >
        thru_amount = #{record.thruAmount,jdbcType=BIGINT},
      </if>
      <if test="record.bizMemberId != null" >
        biz_member_id = #{record.bizMemberId,jdbcType=VARCHAR},
      </if>
      <if test="record.bizAppDate != null" >
        biz_app_date = #{record.bizAppDate,jdbcType=VARCHAR},
      </if>
      <if test="record.bizOrderNo != null" >
        biz_order_no = #{record.bizOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.payMethod != null" >
        pay_method = #{record.payMethod,jdbcType=INTEGER},
      </if>
      <if test="record.bankCode != null" >
        bank_code = #{record.bankCode,jdbcType=VARCHAR},
      </if>
      <if test="record.bankBizCode != null" >
        bank_biz_code = #{record.bankBizCode,jdbcType=VARCHAR},
      </if>
      <if test="record.bankAcceptDate != null" >
        bank_accept_date = #{record.bankAcceptDate,jdbcType=VARCHAR},
      </if>
      <if test="record.bankAcceptSeqNo != null" >
        bank_accept_seq_no = #{record.bankAcceptSeqNo,jdbcType=VARCHAR},
      </if>
      <if test="record.bankRepSeqNo != null" >
        bank_rep_seq_no = #{record.bankRepSeqNo,jdbcType=VARCHAR},
      </if>
      <if test="record.balanceType != null" >
        balance_type = #{record.balanceType,jdbcType=INTEGER},
      </if>
      <if test="record.upBalanceFlag != null" >
        up_balance_flag = #{record.upBalanceFlag,jdbcType=INTEGER},
      </if>
      <if test="record.downBalanceFlag != null" >
        down_balance_flag = #{record.downBalanceFlag,jdbcType=INTEGER},
      </if>
      <if test="record.memberAccountFlowExt != null" >
        member_account_flow_ext = #{record.memberAccountFlowExt,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update member_account_flow
    set id = #{record.id,jdbcType=BIGINT},
      member_account_id = #{record.memberAccountId,jdbcType=BIGINT},
      m_id = #{record.mId,jdbcType=BIGINT},
      member_account_item_id = #{record.memberAccountItemId,jdbcType=BIGINT},
      mat_id = #{record.matId,jdbcType=BIGINT},
      mat_date = #{record.matDate,jdbcType=DATE},
      mat_service_code = #{record.matServiceCode,jdbcType=INTEGER},
      finance_op_type = #{record.financeOpType,jdbcType=INTEGER},
      amount = #{record.amount,jdbcType=BIGINT},
      thawed_amount = #{record.thawedAmount,jdbcType=BIGINT},
      unit = #{record.unit,jdbcType=INTEGER},
      mat_summary = #{record.matSummary,jdbcType=VARCHAR},
      trade_type = #{record.tradeType,jdbcType=INTEGER},
      trade_seq_no = #{record.tradeSeqNo,jdbcType=BIGINT},
      pay_seq_no = #{record.paySeqNo,jdbcType=BIGINT},
      thru_frozen_amount = #{record.thruFrozenAmount,jdbcType=BIGINT},
      thru_amount = #{record.thruAmount,jdbcType=BIGINT},
      biz_member_id = #{record.bizMemberId,jdbcType=VARCHAR},
      biz_app_date = #{record.bizAppDate,jdbcType=VARCHAR},
      biz_order_no = #{record.bizOrderNo,jdbcType=VARCHAR},
      pay_method = #{record.payMethod,jdbcType=INTEGER},
      bank_code = #{record.bankCode,jdbcType=VARCHAR},
      bank_biz_code = #{record.bankBizCode,jdbcType=VARCHAR},
      bank_accept_date = #{record.bankAcceptDate,jdbcType=VARCHAR},
      bank_accept_seq_no = #{record.bankAcceptSeqNo,jdbcType=VARCHAR},
      bank_rep_seq_no = #{record.bankRepSeqNo,jdbcType=VARCHAR},
      balance_type = #{record.balanceType,jdbcType=INTEGER},
      up_balance_flag = #{record.upBalanceFlag,jdbcType=INTEGER},
      down_balance_flag = #{record.downBalanceFlag,jdbcType=INTEGER},
      member_account_flow_ext = #{record.memberAccountFlowExt,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.solution.p2p.core.common.entity.MemberAccountFlow" >
    update member_account_flow
    <set >
      <if test="memberAccountId != null" >
        member_account_id = #{memberAccountId,jdbcType=BIGINT},
      </if>
      <if test="mId != null" >
        m_id = #{mId,jdbcType=BIGINT},
      </if>
      <if test="memberAccountItemId != null" >
        member_account_item_id = #{memberAccountItemId,jdbcType=BIGINT},
      </if>
      <if test="matId != null" >
        mat_id = #{matId,jdbcType=BIGINT},
      </if>
      <if test="matDate != null" >
        mat_date = #{matDate,jdbcType=DATE},
      </if>
      <if test="matServiceCode != null" >
        mat_service_code = #{matServiceCode,jdbcType=INTEGER},
      </if>
      <if test="financeOpType != null" >
        finance_op_type = #{financeOpType,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=BIGINT},
      </if>
      <if test="thawedAmount != null" >
        thawed_amount = #{thawedAmount,jdbcType=BIGINT},
      </if>
      <if test="unit != null" >
        unit = #{unit,jdbcType=INTEGER},
      </if>
      <if test="matSummary != null" >
        mat_summary = #{matSummary,jdbcType=VARCHAR},
      </if>
      <if test="tradeType != null" >
        trade_type = #{tradeType,jdbcType=INTEGER},
      </if>
      <if test="tradeSeqNo != null" >
        trade_seq_no = #{tradeSeqNo,jdbcType=BIGINT},
      </if>
      <if test="paySeqNo != null" >
        pay_seq_no = #{paySeqNo,jdbcType=BIGINT},
      </if>
      <if test="thruFrozenAmount != null" >
        thru_frozen_amount = #{thruFrozenAmount,jdbcType=BIGINT},
      </if>
      <if test="thruAmount != null" >
        thru_amount = #{thruAmount,jdbcType=BIGINT},
      </if>
      <if test="bizMemberId != null" >
        biz_member_id = #{bizMemberId,jdbcType=VARCHAR},
      </if>
      <if test="bizAppDate != null" >
        biz_app_date = #{bizAppDate,jdbcType=VARCHAR},
      </if>
      <if test="bizOrderNo != null" >
        biz_order_no = #{bizOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="payMethod != null" >
        pay_method = #{payMethod,jdbcType=INTEGER},
      </if>
      <if test="bankCode != null" >
        bank_code = #{bankCode,jdbcType=VARCHAR},
      </if>
      <if test="bankBizCode != null" >
        bank_biz_code = #{bankBizCode,jdbcType=VARCHAR},
      </if>
      <if test="bankAcceptDate != null" >
        bank_accept_date = #{bankAcceptDate,jdbcType=VARCHAR},
      </if>
      <if test="bankAcceptSeqNo != null" >
        bank_accept_seq_no = #{bankAcceptSeqNo,jdbcType=VARCHAR},
      </if>
      <if test="bankRepSeqNo != null" >
        bank_rep_seq_no = #{bankRepSeqNo,jdbcType=VARCHAR},
      </if>
      <if test="balanceType != null" >
        balance_type = #{balanceType,jdbcType=INTEGER},
      </if>
      <if test="upBalanceFlag != null" >
        up_balance_flag = #{upBalanceFlag,jdbcType=INTEGER},
      </if>
      <if test="downBalanceFlag != null" >
        down_balance_flag = #{downBalanceFlag,jdbcType=INTEGER},
      </if>
      <if test="memberAccountFlowExt != null" >
        member_account_flow_ext = #{memberAccountFlowExt,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.solution.p2p.core.common.entity.MemberAccountFlow" >
    update member_account_flow
    set member_account_id = #{memberAccountId,jdbcType=BIGINT},
      m_id = #{mId,jdbcType=BIGINT},
      member_account_item_id = #{memberAccountItemId,jdbcType=BIGINT},
      mat_id = #{matId,jdbcType=BIGINT},
      mat_date = #{matDate,jdbcType=DATE},
      mat_service_code = #{matServiceCode,jdbcType=INTEGER},
      finance_op_type = #{financeOpType,jdbcType=INTEGER},
      amount = #{amount,jdbcType=BIGINT},
      thawed_amount = #{thawedAmount,jdbcType=BIGINT},
      unit = #{unit,jdbcType=INTEGER},
      mat_summary = #{matSummary,jdbcType=VARCHAR},
      trade_type = #{tradeType,jdbcType=INTEGER},
      trade_seq_no = #{tradeSeqNo,jdbcType=BIGINT},
      pay_seq_no = #{paySeqNo,jdbcType=BIGINT},
      thru_frozen_amount = #{thruFrozenAmount,jdbcType=BIGINT},
      thru_amount = #{thruAmount,jdbcType=BIGINT},
      biz_member_id = #{bizMemberId,jdbcType=VARCHAR},
      biz_app_date = #{bizAppDate,jdbcType=VARCHAR},
      biz_order_no = #{bizOrderNo,jdbcType=VARCHAR},
      pay_method = #{payMethod,jdbcType=INTEGER},
      bank_code = #{bankCode,jdbcType=VARCHAR},
      bank_biz_code = #{bankBizCode,jdbcType=VARCHAR},
      bank_accept_date = #{bankAcceptDate,jdbcType=VARCHAR},
      bank_accept_seq_no = #{bankAcceptSeqNo,jdbcType=VARCHAR},
      bank_rep_seq_no = #{bankRepSeqNo,jdbcType=VARCHAR},
      balance_type = #{balanceType,jdbcType=INTEGER},
      up_balance_flag = #{upBalanceFlag,jdbcType=INTEGER},
      down_balance_flag = #{downBalanceFlag,jdbcType=INTEGER},
      member_account_flow_ext = #{memberAccountFlowExt,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>