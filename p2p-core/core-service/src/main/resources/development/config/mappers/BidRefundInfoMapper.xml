<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.solution.p2p.core.dao.BidRefundInfoMapper" >
  <resultMap id="BaseResultMap" type="com.solution.p2p.core.common.entity.BidRefundInfo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="m_id" property="mId" jdbcType="BIGINT" />
    <result column="b_id" property="bId" jdbcType="BIGINT" />
    <result column="issue" property="issue" jdbcType="CHAR" />
    <result column="scheduled_refund_time" property="scheduledRefundTime" jdbcType="TIMESTAMP" />
    <result column="real_refund_time" property="realRefundTime" jdbcType="TIMESTAMP" />
    <result column="refund_flow_id" property="refundFlowId" jdbcType="CHAR" />
    <result column="scheduled_refund_principal" property="scheduledRefundPrincipal" jdbcType="BIGINT" />
    <result column="scheduled_refund_interest" property="scheduledRefundInterest" jdbcType="BIGINT" />
    <result column="scheduled_refund_service_fee" property="scheduledRefundServiceFee" jdbcType="BIGINT" />
    <result column="real_refund_amount" property="realRefundAmount" jdbcType="BIGINT" />
    <result column="real_refund_fine" property="realRefundFine" jdbcType="BIGINT" />
    <result column="refund_status" property="refundStatus" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, m_id, b_id, issue, scheduled_refund_time, real_refund_time, refund_flow_id, scheduled_refund_principal, 
    scheduled_refund_interest, scheduled_refund_service_fee, real_refund_amount, real_refund_fine, 
    refund_status, create_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.solution.p2p.core.common.entity.BidRefundInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bid_refund_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from bid_refund_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from bid_refund_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.solution.p2p.core.common.entity.BidRefundInfoExample" >
    delete from bid_refund_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.solution.p2p.core.common.entity.BidRefundInfo" >
    insert into bid_refund_info (id, m_id, b_id, issue, 
      scheduled_refund_time, real_refund_time, 
      refund_flow_id, scheduled_refund_principal, scheduled_refund_interest, 
      scheduled_refund_service_fee, real_refund_amount, 
      real_refund_fine, refund_status, create_time, 
      update_time)
    values (#{id,jdbcType=BIGINT}, #{mId,jdbcType=BIGINT}, #{bId,jdbcType=BIGINT}, #{issue,jdbcType=CHAR}, 
      #{scheduledRefundTime,jdbcType=TIMESTAMP}, #{realRefundTime,jdbcType=TIMESTAMP}, 
      #{refundFlowId,jdbcType=CHAR}, #{scheduledRefundPrincipal,jdbcType=BIGINT}, #{scheduledRefundInterest,jdbcType=BIGINT}, 
      #{scheduledRefundServiceFee,jdbcType=BIGINT}, #{realRefundAmount,jdbcType=BIGINT}, 
      #{realRefundFine,jdbcType=BIGINT}, #{refundStatus,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.solution.p2p.core.common.entity.BidRefundInfo" >
    insert into bid_refund_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="mId != null" >
        m_id,
      </if>
      <if test="bId != null" >
        b_id,
      </if>
      <if test="issue != null" >
        issue,
      </if>
      <if test="scheduledRefundTime != null" >
        scheduled_refund_time,
      </if>
      <if test="realRefundTime != null" >
        real_refund_time,
      </if>
      <if test="refundFlowId != null" >
        refund_flow_id,
      </if>
      <if test="scheduledRefundPrincipal != null" >
        scheduled_refund_principal,
      </if>
      <if test="scheduledRefundInterest != null" >
        scheduled_refund_interest,
      </if>
      <if test="scheduledRefundServiceFee != null" >
        scheduled_refund_service_fee,
      </if>
      <if test="realRefundAmount != null" >
        real_refund_amount,
      </if>
      <if test="realRefundFine != null" >
        real_refund_fine,
      </if>
      <if test="refundStatus != null" >
        refund_status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="mId != null" >
        #{mId,jdbcType=BIGINT},
      </if>
      <if test="bId != null" >
        #{bId,jdbcType=BIGINT},
      </if>
      <if test="issue != null" >
        #{issue,jdbcType=CHAR},
      </if>
      <if test="scheduledRefundTime != null" >
        #{scheduledRefundTime,jdbcType=TIMESTAMP},
      </if>
      <if test="realRefundTime != null" >
        #{realRefundTime,jdbcType=TIMESTAMP},
      </if>
      <if test="refundFlowId != null" >
        #{refundFlowId,jdbcType=CHAR},
      </if>
      <if test="scheduledRefundPrincipal != null" >
        #{scheduledRefundPrincipal,jdbcType=BIGINT},
      </if>
      <if test="scheduledRefundInterest != null" >
        #{scheduledRefundInterest,jdbcType=BIGINT},
      </if>
      <if test="scheduledRefundServiceFee != null" >
        #{scheduledRefundServiceFee,jdbcType=BIGINT},
      </if>
      <if test="realRefundAmount != null" >
        #{realRefundAmount,jdbcType=BIGINT},
      </if>
      <if test="realRefundFine != null" >
        #{realRefundFine,jdbcType=BIGINT},
      </if>
      <if test="refundStatus != null" >
        #{refundStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.solution.p2p.core.common.entity.BidRefundInfoExample" resultType="java.lang.Integer" >
    select count(*) from bid_refund_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bid_refund_info
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.mId != null" >
        m_id = #{record.mId,jdbcType=BIGINT},
      </if>
      <if test="record.bId != null" >
        b_id = #{record.bId,jdbcType=BIGINT},
      </if>
      <if test="record.issue != null" >
        issue = #{record.issue,jdbcType=CHAR},
      </if>
      <if test="record.scheduledRefundTime != null" >
        scheduled_refund_time = #{record.scheduledRefundTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.realRefundTime != null" >
        real_refund_time = #{record.realRefundTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.refundFlowId != null" >
        refund_flow_id = #{record.refundFlowId,jdbcType=CHAR},
      </if>
      <if test="record.scheduledRefundPrincipal != null" >
        scheduled_refund_principal = #{record.scheduledRefundPrincipal,jdbcType=BIGINT},
      </if>
      <if test="record.scheduledRefundInterest != null" >
        scheduled_refund_interest = #{record.scheduledRefundInterest,jdbcType=BIGINT},
      </if>
      <if test="record.scheduledRefundServiceFee != null" >
        scheduled_refund_service_fee = #{record.scheduledRefundServiceFee,jdbcType=BIGINT},
      </if>
      <if test="record.realRefundAmount != null" >
        real_refund_amount = #{record.realRefundAmount,jdbcType=BIGINT},
      </if>
      <if test="record.realRefundFine != null" >
        real_refund_fine = #{record.realRefundFine,jdbcType=BIGINT},
      </if>
      <if test="record.refundStatus != null" >
        refund_status = #{record.refundStatus,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bid_refund_info
    set id = #{record.id,jdbcType=BIGINT},
      m_id = #{record.mId,jdbcType=BIGINT},
      b_id = #{record.bId,jdbcType=BIGINT},
      issue = #{record.issue,jdbcType=CHAR},
      scheduled_refund_time = #{record.scheduledRefundTime,jdbcType=TIMESTAMP},
      real_refund_time = #{record.realRefundTime,jdbcType=TIMESTAMP},
      refund_flow_id = #{record.refundFlowId,jdbcType=CHAR},
      scheduled_refund_principal = #{record.scheduledRefundPrincipal,jdbcType=BIGINT},
      scheduled_refund_interest = #{record.scheduledRefundInterest,jdbcType=BIGINT},
      scheduled_refund_service_fee = #{record.scheduledRefundServiceFee,jdbcType=BIGINT},
      real_refund_amount = #{record.realRefundAmount,jdbcType=BIGINT},
      real_refund_fine = #{record.realRefundFine,jdbcType=BIGINT},
      refund_status = #{record.refundStatus,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.solution.p2p.core.common.entity.BidRefundInfo" >
    update bid_refund_info
    <set >
      <if test="mId != null" >
        m_id = #{mId,jdbcType=BIGINT},
      </if>
      <if test="bId != null" >
        b_id = #{bId,jdbcType=BIGINT},
      </if>
      <if test="issue != null" >
        issue = #{issue,jdbcType=CHAR},
      </if>
      <if test="scheduledRefundTime != null" >
        scheduled_refund_time = #{scheduledRefundTime,jdbcType=TIMESTAMP},
      </if>
      <if test="realRefundTime != null" >
        real_refund_time = #{realRefundTime,jdbcType=TIMESTAMP},
      </if>
      <if test="refundFlowId != null" >
        refund_flow_id = #{refundFlowId,jdbcType=CHAR},
      </if>
      <if test="scheduledRefundPrincipal != null" >
        scheduled_refund_principal = #{scheduledRefundPrincipal,jdbcType=BIGINT},
      </if>
      <if test="scheduledRefundInterest != null" >
        scheduled_refund_interest = #{scheduledRefundInterest,jdbcType=BIGINT},
      </if>
      <if test="scheduledRefundServiceFee != null" >
        scheduled_refund_service_fee = #{scheduledRefundServiceFee,jdbcType=BIGINT},
      </if>
      <if test="realRefundAmount != null" >
        real_refund_amount = #{realRefundAmount,jdbcType=BIGINT},
      </if>
      <if test="realRefundFine != null" >
        real_refund_fine = #{realRefundFine,jdbcType=BIGINT},
      </if>
      <if test="refundStatus != null" >
        refund_status = #{refundStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.solution.p2p.core.common.entity.BidRefundInfo" >
    update bid_refund_info
    set m_id = #{mId,jdbcType=BIGINT},
      b_id = #{bId,jdbcType=BIGINT},
      issue = #{issue,jdbcType=CHAR},
      scheduled_refund_time = #{scheduledRefundTime,jdbcType=TIMESTAMP},
      real_refund_time = #{realRefundTime,jdbcType=TIMESTAMP},
      refund_flow_id = #{refundFlowId,jdbcType=CHAR},
      scheduled_refund_principal = #{scheduledRefundPrincipal,jdbcType=BIGINT},
      scheduled_refund_interest = #{scheduledRefundInterest,jdbcType=BIGINT},
      scheduled_refund_service_fee = #{scheduledRefundServiceFee,jdbcType=BIGINT},
      real_refund_amount = #{realRefundAmount,jdbcType=BIGINT},
      real_refund_fine = #{realRefundFine,jdbcType=BIGINT},
      refund_status = #{refundStatus,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>