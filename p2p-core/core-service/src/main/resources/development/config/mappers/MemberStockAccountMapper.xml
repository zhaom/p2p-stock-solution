<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.solution.p2p.core.dao.MemberStockAccountMapper" >
  <resultMap id="BaseResultMap" type="com.solution.p2p.core.common.entity.MemberStockAccount" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="m_id" property="mId" jdbcType="BIGINT" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="from_date" property="fromDate" jdbcType="TIMESTAMP" />
    <result column="thru_date" property="thruDate" jdbcType="TIMESTAMP" />
    <result column="account_name" property="accountName" jdbcType="VARCHAR" />
    <result column="stock_code" property="stockCode" jdbcType="VARCHAR" />
    <result column="usable_amount" property="usableAmount" jdbcType="BIGINT" />
    <result column="cash_amount" property="cashAmount" jdbcType="BIGINT" />
    <result column="cash_fund_amount" property="cashFundAmount" jdbcType="BIGINT" />
    <result column="financed_amount" property="financedAmount" jdbcType="BIGINT" />
    <result column="interest_amount" property="interestAmount" jdbcType="BIGINT" />
    <result column="interest_payed" property="interestPayed" jdbcType="BIGINT" />
    <result column="stock_market_value" property="stockMarketValue" jdbcType="BIGINT" />
    <result column="alarm_amount" property="alarmAmount" jdbcType="BIGINT" />
    <result column="forced_liquidation_amount" property="forcedLiquidationAmount" jdbcType="BIGINT" />
    <result column="last_value_time" property="lastValueTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, m_id, type, from_date, thru_date, account_name, stock_code, usable_amount, cash_amount, 
    cash_fund_amount, financed_amount, interest_amount, interest_payed, stock_market_value, 
    alarm_amount, forced_liquidation_amount, last_value_time, status, create_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.solution.p2p.core.common.entity.MemberStockAccountExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from member_stock_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from member_stock_account
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from member_stock_account
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.solution.p2p.core.common.entity.MemberStockAccountExample" >
    delete from member_stock_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.solution.p2p.core.common.entity.MemberStockAccount" >
    insert into member_stock_account (id, m_id, type, 
      from_date, thru_date, account_name, 
      stock_code, usable_amount, cash_amount, 
      cash_fund_amount, financed_amount, interest_amount, 
      interest_payed, stock_market_value, alarm_amount, 
      forced_liquidation_amount, last_value_time, 
      status, create_time, update_time
      )
    values (#{id,jdbcType=BIGINT}, #{mId,jdbcType=BIGINT}, #{type,jdbcType=INTEGER}, 
      #{fromDate,jdbcType=TIMESTAMP}, #{thruDate,jdbcType=TIMESTAMP}, #{accountName,jdbcType=VARCHAR}, 
      #{stockCode,jdbcType=VARCHAR}, #{usableAmount,jdbcType=BIGINT}, #{cashAmount,jdbcType=BIGINT}, 
      #{cashFundAmount,jdbcType=BIGINT}, #{financedAmount,jdbcType=BIGINT}, #{interestAmount,jdbcType=BIGINT}, 
      #{interestPayed,jdbcType=BIGINT}, #{stockMarketValue,jdbcType=BIGINT}, #{alarmAmount,jdbcType=BIGINT}, 
      #{forcedLiquidationAmount,jdbcType=BIGINT}, #{lastValueTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.solution.p2p.core.common.entity.MemberStockAccount" >
    insert into member_stock_account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="mId != null" >
        m_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="fromDate != null" >
        from_date,
      </if>
      <if test="thruDate != null" >
        thru_date,
      </if>
      <if test="accountName != null" >
        account_name,
      </if>
      <if test="stockCode != null" >
        stock_code,
      </if>
      <if test="usableAmount != null" >
        usable_amount,
      </if>
      <if test="cashAmount != null" >
        cash_amount,
      </if>
      <if test="cashFundAmount != null" >
        cash_fund_amount,
      </if>
      <if test="financedAmount != null" >
        financed_amount,
      </if>
      <if test="interestAmount != null" >
        interest_amount,
      </if>
      <if test="interestPayed != null" >
        interest_payed,
      </if>
      <if test="stockMarketValue != null" >
        stock_market_value,
      </if>
      <if test="alarmAmount != null" >
        alarm_amount,
      </if>
      <if test="forcedLiquidationAmount != null" >
        forced_liquidation_amount,
      </if>
      <if test="lastValueTime != null" >
        last_value_time,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="mId != null" >
        #{mId,jdbcType=BIGINT},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="fromDate != null" >
        #{fromDate,jdbcType=TIMESTAMP},
      </if>
      <if test="thruDate != null" >
        #{thruDate,jdbcType=TIMESTAMP},
      </if>
      <if test="accountName != null" >
        #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="stockCode != null" >
        #{stockCode,jdbcType=VARCHAR},
      </if>
      <if test="usableAmount != null" >
        #{usableAmount,jdbcType=BIGINT},
      </if>
      <if test="cashAmount != null" >
        #{cashAmount,jdbcType=BIGINT},
      </if>
      <if test="cashFundAmount != null" >
        #{cashFundAmount,jdbcType=BIGINT},
      </if>
      <if test="financedAmount != null" >
        #{financedAmount,jdbcType=BIGINT},
      </if>
      <if test="interestAmount != null" >
        #{interestAmount,jdbcType=BIGINT},
      </if>
      <if test="interestPayed != null" >
        #{interestPayed,jdbcType=BIGINT},
      </if>
      <if test="stockMarketValue != null" >
        #{stockMarketValue,jdbcType=BIGINT},
      </if>
      <if test="alarmAmount != null" >
        #{alarmAmount,jdbcType=BIGINT},
      </if>
      <if test="forcedLiquidationAmount != null" >
        #{forcedLiquidationAmount,jdbcType=BIGINT},
      </if>
      <if test="lastValueTime != null" >
        #{lastValueTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.solution.p2p.core.common.entity.MemberStockAccountExample" resultType="java.lang.Integer" >
    select count(*) from member_stock_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update member_stock_account
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.mId != null" >
        m_id = #{record.mId,jdbcType=BIGINT},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.fromDate != null" >
        from_date = #{record.fromDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.thruDate != null" >
        thru_date = #{record.thruDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.accountName != null" >
        account_name = #{record.accountName,jdbcType=VARCHAR},
      </if>
      <if test="record.stockCode != null" >
        stock_code = #{record.stockCode,jdbcType=VARCHAR},
      </if>
      <if test="record.usableAmount != null" >
        usable_amount = #{record.usableAmount,jdbcType=BIGINT},
      </if>
      <if test="record.cashAmount != null" >
        cash_amount = #{record.cashAmount,jdbcType=BIGINT},
      </if>
      <if test="record.cashFundAmount != null" >
        cash_fund_amount = #{record.cashFundAmount,jdbcType=BIGINT},
      </if>
      <if test="record.financedAmount != null" >
        financed_amount = #{record.financedAmount,jdbcType=BIGINT},
      </if>
      <if test="record.interestAmount != null" >
        interest_amount = #{record.interestAmount,jdbcType=BIGINT},
      </if>
      <if test="record.interestPayed != null" >
        interest_payed = #{record.interestPayed,jdbcType=BIGINT},
      </if>
      <if test="record.stockMarketValue != null" >
        stock_market_value = #{record.stockMarketValue,jdbcType=BIGINT},
      </if>
      <if test="record.alarmAmount != null" >
        alarm_amount = #{record.alarmAmount,jdbcType=BIGINT},
      </if>
      <if test="record.forcedLiquidationAmount != null" >
        forced_liquidation_amount = #{record.forcedLiquidationAmount,jdbcType=BIGINT},
      </if>
      <if test="record.lastValueTime != null" >
        last_value_time = #{record.lastValueTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update member_stock_account
    set id = #{record.id,jdbcType=BIGINT},
      m_id = #{record.mId,jdbcType=BIGINT},
      type = #{record.type,jdbcType=INTEGER},
      from_date = #{record.fromDate,jdbcType=TIMESTAMP},
      thru_date = #{record.thruDate,jdbcType=TIMESTAMP},
      account_name = #{record.accountName,jdbcType=VARCHAR},
      stock_code = #{record.stockCode,jdbcType=VARCHAR},
      usable_amount = #{record.usableAmount,jdbcType=BIGINT},
      cash_amount = #{record.cashAmount,jdbcType=BIGINT},
      cash_fund_amount = #{record.cashFundAmount,jdbcType=BIGINT},
      financed_amount = #{record.financedAmount,jdbcType=BIGINT},
      interest_amount = #{record.interestAmount,jdbcType=BIGINT},
      interest_payed = #{record.interestPayed,jdbcType=BIGINT},
      stock_market_value = #{record.stockMarketValue,jdbcType=BIGINT},
      alarm_amount = #{record.alarmAmount,jdbcType=BIGINT},
      forced_liquidation_amount = #{record.forcedLiquidationAmount,jdbcType=BIGINT},
      last_value_time = #{record.lastValueTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.solution.p2p.core.common.entity.MemberStockAccount" >
    update member_stock_account
    <set >
      <if test="mId != null" >
        m_id = #{mId,jdbcType=BIGINT},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="fromDate != null" >
        from_date = #{fromDate,jdbcType=TIMESTAMP},
      </if>
      <if test="thruDate != null" >
        thru_date = #{thruDate,jdbcType=TIMESTAMP},
      </if>
      <if test="accountName != null" >
        account_name = #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="stockCode != null" >
        stock_code = #{stockCode,jdbcType=VARCHAR},
      </if>
      <if test="usableAmount != null" >
        usable_amount = #{usableAmount,jdbcType=BIGINT},
      </if>
      <if test="cashAmount != null" >
        cash_amount = #{cashAmount,jdbcType=BIGINT},
      </if>
      <if test="cashFundAmount != null" >
        cash_fund_amount = #{cashFundAmount,jdbcType=BIGINT},
      </if>
      <if test="financedAmount != null" >
        financed_amount = #{financedAmount,jdbcType=BIGINT},
      </if>
      <if test="interestAmount != null" >
        interest_amount = #{interestAmount,jdbcType=BIGINT},
      </if>
      <if test="interestPayed != null" >
        interest_payed = #{interestPayed,jdbcType=BIGINT},
      </if>
      <if test="stockMarketValue != null" >
        stock_market_value = #{stockMarketValue,jdbcType=BIGINT},
      </if>
      <if test="alarmAmount != null" >
        alarm_amount = #{alarmAmount,jdbcType=BIGINT},
      </if>
      <if test="forcedLiquidationAmount != null" >
        forced_liquidation_amount = #{forcedLiquidationAmount,jdbcType=BIGINT},
      </if>
      <if test="lastValueTime != null" >
        last_value_time = #{lastValueTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.solution.p2p.core.common.entity.MemberStockAccount" >
    update member_stock_account
    set m_id = #{mId,jdbcType=BIGINT},
      type = #{type,jdbcType=INTEGER},
      from_date = #{fromDate,jdbcType=TIMESTAMP},
      thru_date = #{thruDate,jdbcType=TIMESTAMP},
      account_name = #{accountName,jdbcType=VARCHAR},
      stock_code = #{stockCode,jdbcType=VARCHAR},
      usable_amount = #{usableAmount,jdbcType=BIGINT},
      cash_amount = #{cashAmount,jdbcType=BIGINT},
      cash_fund_amount = #{cashFundAmount,jdbcType=BIGINT},
      financed_amount = #{financedAmount,jdbcType=BIGINT},
      interest_amount = #{interestAmount,jdbcType=BIGINT},
      interest_payed = #{interestPayed,jdbcType=BIGINT},
      stock_market_value = #{stockMarketValue,jdbcType=BIGINT},
      alarm_amount = #{alarmAmount,jdbcType=BIGINT},
      forced_liquidation_amount = #{forcedLiquidationAmount,jdbcType=BIGINT},
      last_value_time = #{lastValueTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>